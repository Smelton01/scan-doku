[{"/Users/simonjd/projects/sudoku_solver/ui/src/index.js":"1","/Users/simonjd/projects/sudoku_solver/ui/src/App.js":"2","/Users/simonjd/projects/sudoku_solver/ui/src/components/MyGrid.js":"3","/Users/simonjd/projects/sudoku_solver/ui/src/components/SubRow.js":"4","/Users/simonjd/projects/sudoku_solver/ui/src/components/Cell.js":"5"},{"size":220,"mtime":1634911564545,"results":"6","hashOfConfig":"7"},{"size":3131,"mtime":1635001218917,"results":"8","hashOfConfig":"7"},{"size":223,"mtime":1619199715139,"results":"9","hashOfConfig":"7"},{"size":221,"mtime":1619199715140,"results":"10","hashOfConfig":"7"},{"size":1914,"mtime":1619199715138,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"10py8vm",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/simonjd/projects/sudoku_solver/ui/src/index.js",[],["24","25"],"/Users/simonjd/projects/sudoku_solver/ui/src/App.js",["26","27","28"],"/Users/simonjd/projects/sudoku_solver/ui/src/components/MyGrid.js",[],"/Users/simonjd/projects/sudoku_solver/ui/src/components/SubRow.js",[],"/Users/simonjd/projects/sudoku_solver/ui/src/components/Cell.js",["29","30"],"import React, {useState, useEffect} from 'react';\r\nimport { Container, Row, Col } from 'react-flexybox';\r\nimport {Animate} from \"react-simple-animate\"\r\n\r\n\r\nexport default function Cell(props) {\r\n    const index = (props.col*9 + props.row);\r\n\r\n    // const [myState, setMystate] = useState({\"init\":true})\r\n\r\n    // useEffect(() => {\r\n    //     console.log(myState, \"-has changed\")\r\n    // }, [myState])\r\n\r\n    return (\r\n        <Animate play start={{ opacity: 0 }} end={{ opacity: 1 }} duration={1}>\r\n            <Container style={boxStyle}>\r\n                <Row gutter={1}>\r\n                    <Col flex={12} style={getStyle(index)}> {props.elements[index]} </Col>\r\n                </Row>\r\n            </Container>\r\n        </Animate>\r\n    )\r\n}\r\n\r\nconst subgroups = [[\"a\", 0, 1, 2, 9, 10, 11, 18, 19, 20], [\"b\", 3, 4, 5, 12, 13, 14, 21, 22, 23], [\"c\", 6, 7, 8, 15, 16, 17, 24, 25, 26], [\"d\", 27, 28, 29, 36, 37, 38, 45, 46, 47], [\"e\", 30, 31, 32, 39, 40, 41, 48, 49, 50], [\"f\", 33, 34, 35, 42, 43, 44, 51, 52, 53], [\"g\", 54, 55, 56, 63, 64, 65, 72, 73, 74], [\"h\", 57, 58, 59, 66, 67, 68, 75, 76, 77], [\"i\", 60, 61, 62, 69, 70, 71, 78, 79, 80]]\r\n\r\nfunction getStyle(index) {\r\n    let box = subgroups.filter((li) => li.includes(index));\r\n    box = box[0][0];\r\n    const style = {\r\n        background: \"steelblue\", \r\n        padding: \"10px\", \r\n        color: \"#fff\",\r\n        fontWeight: \"bold\" \r\n    }\r\n    if([\"a\", \"c\", \"e\", \"g\", \"i\"].includes(box))\r\n        return style\r\n    else {\r\n        return {\r\n            background: \"#222\", \r\n            padding: \"10px\", \r\n            color: \"#ff0000\",\r\n            fontWeight: \"bold\"\r\n        }\r\n    }\r\n}\r\n\r\n// const preStyle = {\r\n//     background: \"steelblue\", \r\n//     padding: \"10px\", \r\n//     color: \"#fff\",\r\n//     fontWeight: \"bold\"\r\n// }\r\n\r\nconst boxStyle = {\r\n    width: \"50px\", \r\n    border: \"3px solid #333\", \r\n    margin: \"auto\", \r\n    padding: \"0px\" \r\n}",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":28,"nodeType":"37","messageId":"38","endLine":1,"endColumn":36},{"ruleId":"35","severity":1,"message":"39","line":1,"column":38,"nodeType":"37","messageId":"38","endLine":1,"endColumn":47},{"ruleId":"35","severity":1,"message":"40","line":4,"column":26,"nodeType":"37","messageId":"38","endLine":4,"endColumn":29},{"ruleId":"35","severity":1,"message":"41","line":1,"column":16,"nodeType":"37","messageId":"38","endLine":1,"endColumn":24},{"ruleId":"35","severity":1,"message":"39","line":1,"column":26,"nodeType":"37","messageId":"38","endLine":1,"endColumn":35},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'setState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Col' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]